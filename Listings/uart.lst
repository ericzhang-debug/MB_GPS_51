C51 COMPILER V9.60.0.0   UART                                                              06/24/2022 22:36:43 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\Objects\uart.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE uart.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\uart
                    -.lst) TABS(2) OBJECT(.\Objects\uart.obj)

line level    source

   1          #include "uart.h"
   2          
   3          char idata gpsRxBuffer[gpsRxBufferLength];
   4          unsigned char RX_Count = 0;
   5          _SaveData Save_Data;
   6          
   7          /*void Uart_Init()                     
   8          {
   9            SCON = 0X50;  //UART方式1；8位UART
  10            REN  = 1;     //允许串行口接收数据
  11            PCON = 0x00;  //SMOD=0;波特率不加倍
  12            TMOD = 0x20;  //T1方式2，用于产生波特率
  13            TH1  = 0xFD;  //装初值
  14            TL1  = 0xFD;
  15            TR1  = 1;     //启动定时器1
  16            EA   = 1;     //打开全局中断控制
  17            ES   = 1;     //打开串行口中断  
  18          }*/
  19          
  20          
  21          void UartInit(void)   //9600bps@11.0592MHz
  22          {
  23   1        S2CON = 0x50;   //8位数据,可变波特率
  24   1        AUXR |= 0x04;   //定时器时钟1T模式
  25   1        T2L = 0xE0;   //设置定时初始值
  26   1        T2H = 0xFE;   //设置定时初始值
  27   1        AUXR |= 0x10;   //定时器2开始计时
  28   1      }
  29          
  30          
  31          
  32          void UartPrintf(unsigned char *p)       //发送字符串
  33          { 
  34   1        while(*p)
  35   1        {
  36   2          SBUF=*(p++);
  37   2          while(TI==0)
  38   2          {
  39   3      
  40   3          };
  41   2          TI=0;
  42   2        }   
  43   1      }
  44          
  45          void UartPrintASCII(unsigned char c)        //发送一个字符
  46          { 
  47   1          TI=0;   
  48   1          SBUF=c;   
  49   1          while(TI==0);   
  50   1          TI=0;   
  51   1      }
  52          
  53          
  54          void RECEIVE_DATA(void) interrupt 4 using 3       
C51 COMPILER V9.60.0.0   UART                                                              06/24/2022 22:36:43 PAGE 2   

  55          { 
  56   1        unsigned char temp = 0;
  57   1        char i = 0;
  58   1        ES=0;
  59   1        temp = SBUF;
  60   1        RI = 0;
  61   1        
  62   1        if(temp == '$')
  63   1        {
  64   2          RX_Count = 0; 
  65   2        }
  66   1          
  67   1        if(RX_Count <= 5)
  68   1        {
  69   2           gpsRxBuffer[RX_Count++] = temp;
  70   2        }
  71   1        else if(gpsRxBuffer[0] == '$' &gpsRxBuffer[4] == 'M' && gpsRxBuffer[5] == 'C')      //确定是否收到"GPRMC/GNR
             -MC"这一帧数据
  72   1        {
  73   2          gpsRxBuffer[RX_Count++] = temp;
  74   2          if(temp == '\n')                     
  75   2          {
  76   3            memset(Save_Data.GPS_Buffer, 0, GPS_Buffer_Length);      //清空
  77   3            memcpy(Save_Data.GPS_Buffer, gpsRxBuffer, RX_Count);  //保存数据
  78   3            Save_Data.isGetData = true;
  79   3            RX_Count = 0;
  80   3            memset(gpsRxBuffer, 0, gpsRxBufferLength);      //清空        
  81   3          }
  82   2          
  83   2          if(RX_Count >= 75)
  84   2          {
  85   3            RX_Count = 75;
  86   3            gpsRxBuffer[RX_Count] = '\0';//添加结束符
  87   3          }     
  88   2        }
  89   1        ES=1; 
  90   1      }
  91          
  92          void clrStruct()
  93          {
  94   1        Save_Data.isGetData = false;
  95   1        Save_Data.isParseData = false;
  96   1        Save_Data.isUsefull = false;
  97   1        memset(Save_Data.GPS_Buffer, 0, GPS_Buffer_Length);      //清空
  98   1        memset(Save_Data.UTCTime, 0, UTCTime_Length);
  99   1        memset(Save_Data.latitude, 0, latitude_Length);
 100   1        memset(Save_Data.N_S, 0, N_S_Length);
 101   1        memset(Save_Data.longitude, 0, longitude_Length);
 102   1        memset(Save_Data.E_W, 0, E_W_Length);
 103   1        
 104   1      }
 105          
 106          
 107          
 108          
 109          
 110          
 111          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    356    ----
C51 COMPILER V9.60.0.0   UART                                                              06/24/2022 22:36:43 PAGE 3   

   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    121    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1       4
   IDATA SIZE       =     76    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
