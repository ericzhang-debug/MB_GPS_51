C51 COMPILER V9.60.0.0   MAIN                                                              06/24/2022 22:35:08 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <STC8G.H>
   2          #include "delay.h"
   3          #include "oled.h"
   4          #include "uart.h"
   5          #include <string.h>
   6          
   7          void main()
   8          {
   9   1        unsigned char i = 0;
  10   1        
  11   1        
  12   1        OLED_Init();
  13   1        OLED_Clear();
  14   1        Uart_Init();
  15   1        
  16   1      
  17   1        Delay(10);
  18   1        clrStruct();  //清空缓存数组
  19   1      
  20   1        OLED_ShowString(1,1,"Initiating...");
  21   1        OLED_ShowString(30,20,"By Eric");
  22   1        OLED_ShowString(30,5,"Fireware:v1.0");
  23   1        Delay(400);
  24   1        OLED_Clear();
  25   1        
  26   1        while(1)
  27   1        {
  28   2          parseGpsBuffer();
  29   2          printGpsBuffer();
  30   2        }
  31   1      }
  32          
  33          
  34          void errorLog(int num)
  35          {
  36   1        
  37   1        while (1)
  38   1        {
  39   2            UartPrintf("ERROR");
  40   2          UartPrintASCII(num+0x30);
  41   2          UartPrintf("\r\n");
  42   2        }
  43   1      }
  44          
  45          void parseGpsBuffer()
  46          {
  47   1        char *subString;
  48   1        char *subStringNext;
  49   1        char i = 0;
  50   1        if (Save_Data.isGetData)
  51   1        {
  52   2          Save_Data.isGetData = false;
  53   2          UartPrintf("**************\r\n");
  54   2          UartPrintf(Save_Data.GPS_Buffer);
C51 COMPILER V9.60.0.0   MAIN                                                              06/24/2022 22:35:08 PAGE 2   

  55   2      
  56   2          
  57   2          for (i = 0 ; i <= 6 ; i++)
  58   2          {
  59   3            if (i == 0)
  60   3            {
  61   4              if ((subString = strstr(Save_Data.GPS_Buffer, ",")) == NULL)
  62   4                errorLog(1);  //解析错误
  63   4            }
  64   3            else
  65   3            {
  66   4              subString++;
  67   4              if ((subStringNext = strstr(subString, ",")) != NULL)
  68   4              {
  69   5                char usefullBuffer[2]; 
  70   5                switch(i)
  71   5                {
  72   6                  case 1:memcpy(Save_Data.UTCTime, subString, subStringNext - subString);break; //获取UTC时间
  73   6                  case 2:memcpy(usefullBuffer, subString, subStringNext - subString);break; //获取UTC时间
  74   6                  case 3:memcpy(Save_Data.latitude, subString, subStringNext - subString);break;  //获取纬度信息
  75   6                  case 4:memcpy(Save_Data.N_S, subString, subStringNext - subString);break; //获取N/S
  76   6                  case 5:memcpy(Save_Data.longitude, subString, subStringNext - subString);break; //获取经度信息
  77   6                  case 6:memcpy(Save_Data.E_W, subString, subStringNext - subString);break; //获取E/W
  78   6      
  79   6                  default:break;
  80   6                }
  81   5      
  82   5                subString = subStringNext;
  83   5                Save_Data.isParseData = true;
  84   5                if(usefullBuffer[0] == 'A')
  85   5                  Save_Data.isUsefull = true;
  86   5                else if(usefullBuffer[0] == 'V')
  87   5                  Save_Data.isUsefull = false;
  88   5      
  89   5              }
  90   4              else
  91   4              {
  92   5                errorLog(2);  //解析错误
  93   5              }
  94   4            }
  95   3      
  96   3      
  97   3          }
  98   2        }
  99   1      }
 100          
 101          void printGpsBuffer()
 102          {
 103   1        OLED_Clear();
 104   1        if (Save_Data.isParseData)
 105   1        {
 106   2          Save_Data.isParseData = false;
 107   2          /*OLED显示时间*/
 108   2          OLED_ShowString(1,1,strcat("UTC Time:",Save_Data.UTCTime));
 109   2          
 110   2          UartPrintf("Save_Data.UTCTime = ");
 111   2          UartPrintf(Save_Data.UTCTime);
 112   2          UartPrintf("\r\n");
 113   2      
 114   2          if(Save_Data.isUsefull)
 115   2          {
 116   3            Save_Data.isUsefull = false;
C51 COMPILER V9.60.0.0   MAIN                                                              06/24/2022 22:35:08 PAGE 3   

 117   3            
 118   3            //OLED_ShowString(4,1,strcat("Latitude:",Save_Data.latitude));
 119   3            
 120   3            UartPrintf("Save_Data.latitude = ");
 121   3            UartPrintf(Save_Data.latitude);
 122   3            UartPrintf("\r\n");
 123   3      
 124   3      
 125   3            UartPrintf("Save_Data.N_S = ");
 126   3            UartPrintf(Save_Data.N_S);
 127   3            UartPrintf("\r\n");
 128   3      
 129   3            OLED_ShowString(4,1,strcat("Latitude: ",strcat(Save_Data.latitude,Save_Data.N_S)));
 130   3      
 131   3            
 132   3            UartPrintf("Save_Data.longitude = ");
 133   3            UartPrintf(Save_Data.longitude);
 134   3            UartPrintf("\r\n");
 135   3      
 136   3            UartPrintf("Save_Data.E_W = ");
 137   3            UartPrintf(Save_Data.E_W);
 138   3            UartPrintf("\r\n");
 139   3            
 140   3            OLED_ShowString(7,1,strcat("Longitude: ",strcat(Save_Data.longitude,Save_Data.E_W)));
 141   3          }
 142   2          else
 143   2          {
 144   3            UartPrintf("GPS DATA is not usefull!\r\n");
 145   3            OLED_ShowString(10,1,"GPS DATA is not usefull!");
 146   3          }
 147   2          
 148   2        }
 149   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    732    ----
   CONSTANT SIZE    =    249    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      12
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
